window.SIDEBAR_ITEMS = {"constant":[["COVERAGE_PASSES","The list of default passes run when `--doc-coverage` is passed to rustdoc."],["DEFAULT_PASSES","The list of passes run by default."],["PASSES","The full list of passes."]],"enum":[["Condition","How to decide whether to run a conditional pass."]],"fn":[["defaults","Returns the given default set of passes."],["source_span_for_markdown_range","Attempts to match a range of bytes from parsed markdown to a `Span` in the source code."],["span_of_attrs","Returns a span encompassing all the given attributes."]],"mod":[["calculate_doc_coverage","Calculates information used for the â€“show-coverage flag."],["check_doc_test_visibility","Looks for items missing (or incorrectly having) doctests."],["collect_intra_doc_links","This module implements RFC 1946: Intra-rustdoc-links"],["collect_trait_impls","Collects trait impls for each item in the crate. For example, if a crate defines a struct that implements a trait, this pass will note that the struct implements that trait."],["lint","Runs several rustdoc lints, consolidating them into a single pass for efficiency and simplicity."],["propagate_doc_cfg","Propagates `#[doc(cfg(...))]` to child items."],["strip_hidden","Strip all doc(hidden) items from the output."],["strip_priv_imports","Strips all private import statements (use, extern crate) from a crate."],["strip_private","Strip all private items from the output. Additionally implies strip_priv_imports. Basically, the goal is to remove items that are not relevant for public documentation."],["stripper","A collection of utility functions for the `strip_*` passes."]],"struct":[["ConditionalPass","In a list of passes, a pass that may or may not need to be run depending on options."],["Pass","A single pass over the cleaned documentation."]]};