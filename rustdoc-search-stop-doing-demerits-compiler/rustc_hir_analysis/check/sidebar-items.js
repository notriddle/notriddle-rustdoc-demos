window.SIDEBAR_ITEMS = {"fn":[["adt_destructor",""],["bad_non_zero_sized_fields","Emit an error when encountering two or more non-zero-sized fields in a transparent enum."],["bad_variant_count","Emit an error when encountering two or more variants in a transparent enum."],["bounds_from_generic_predicates","Re-sugar `ty::GenericPredicates` in a way suitable to be used in structured suggestions."],["check_abi",""],["default_body_is_unstable",""],["fn_maybe_err","Forbid defining intrinsics in Rust code, as they must always be defined by the compiler."],["fn_sig_suggestion","Return placeholder code for the given function."],["get_owner_return_paths","Given a `DefId` for an opaque type in return position, find its parent itemâ€™s return expressions."],["maybe_check_static_with_link_section",""],["missing_items_err",""],["missing_items_must_implement_one_of_err",""],["potentially_plural_count",""],["provide",""],["report_forbidden_specialization",""],["suggestion_signature","Return placeholder code for the given associated item. Similar to `ty::AssocItem::suggestion`, but appropriate for use as the code snippet of a structured suggestion."],["ty_kind_suggestion",""]],"mod":[["check",""],["compare_method",""],["dropck",""],["intrinsic","Type-checking for the rust-intrinsic and platform-intrinsic intrinsics that the compiler exposes."],["intrinsicck",""],["region","This file builds up the `ScopeTree`, which describes the parent links in the region hierarchy."],["wfcheck",""]]};