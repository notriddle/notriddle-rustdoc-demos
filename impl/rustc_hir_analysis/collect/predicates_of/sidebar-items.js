window.SIDEBAR_ITEMS = {"fn":[["const_evaluatable_predicates_of",""],["explicit_predicates_of",""],["gather_explicit_predicates_of","Returns a list of user-specified type predicates for the definition with ID `def_id`. N.B., this does not include any implied/inferred constraints."],["predicates_from_bound","Converts a specific `GenericBound` from the AST into a set of predicates that apply to the self type. A vector is returned because this can be anywhere from zero predicates (`T: ?Sized` adds no predicates) to one (`T: Foo`) to many (`T: Bar<X = i32>` adds `T: Bar` and `<T as Bar>::X == i32`)."],["predicates_of","Returns a list of all type predicates (explicit and implicit) for the definition with ID `def_id`. This includes all predicates returned by `predicates_defined_on`, plus `Self: Trait` predicates for traits."],["super_predicates_of","Ensures that the super-predicates of the trait with a `DefId` of `trait_def_id` are converted and stored. This also ensures that the transitive super-predicates are converted."],["super_predicates_that_define_assoc_type","Ensures that the super-predicates of the trait with a `DefId` of `trait_def_id` are converted and stored. This also ensures that the transitive super-predicates are converted."],["trait_explicit_predicates_and_bounds",""],["type_param_predicates","Returns the predicates defined on `item_def_id` of the form `X: Foo` where `X` is the type parameter `def_id`."]],"struct":[["OnlySelfBounds",""]]};